[{"path":"index.html","id":"willkommen","chapter":"Willkommen","heading":"Willkommen","text":"Dieses Skript entstand (und entsteht) aus meinen Lehrveranstaltungen rund um das Thema Data Science & Machine Learning. Die Inhalte richten sich Studierende, die erste Schritte auf das KI -Spielfeld wagen und das Potential von datengetriebenen Lösungsverfahren verstehen wollen.Insofern richtet sich die Darstellung Studierende mit vertieftem Interesse KI, die einen für Studierende angemessenes Vorwissen im Bereich Mathematik mitbringen. Vorkenntnisse im Bereich der Programmierung sind nicht nötig, aber natürlich hilfreich.Ich habe mich bemüht, zahlreiche Übungsbeispiele und Youtube-Videos einzubauen. Viele Themen lassen sich besser darstellen. Sofern es Medien im Netz gibt, die die Sachverhalte gut darstellen, werde ich entsprechenden Links einbauen","code":""},{"path":"python---quickstart.html","id":"python---quickstart","chapter":"1 Python - Quickstart","heading":"1 Python - Quickstart","text":"Es wird sie nicht überraschen, dass Data-Science nur mit Unterstützung eines Computers und speziellen Algorithmen zielführend ist. Hierfür verwenden wir die Programmiersprache Python. Ich empfehle dringend ein der folgenden Varianten zur Nutzung von Python zu verwenden. Wir starten beiden Varianten mit dem typischerweise ersten Programm für Anfänger, dem Hallo-Welt-Programm. Dieses Programm gibt lediglich den digitalen Gruß “Hallo Welt” dem vorgesehen Ausgabe Bereich aus.","code":""},{"path":"python---quickstart.html","id":"hallo-welt","chapter":"1 Python - Quickstart","heading":"1.1 Hallo Welt","text":"Unser kleines Begrüßungsprogramm besteht nur aus einer ZeileDie Ausgabe dieses Programms ist:","code":"print(\"Hallo Welt\")#> Hallo Welt"},{"path":"python---quickstart.html","id":"variante-1-colab-notebooks","chapter":"1 Python - Quickstart","heading":"Variante 1: Colab-Notebooks","text":"Unter dem Link https://colab.research.google.com/ können sie ein sogenanntes Colab-Notebook erstellen. die Programmzelle können tragen sie die Befehle ein. Ein Klick auf  führt die Programmzeilen aus und schreibt eventuelle Ausgaben unter die Programmzelle.Colab-Notebook mit ProgrammzelleVersuchen sie es! Mit File->Save können sie das Notebook abspeichern. Weitere Hinweise zum Umgang mit Colab-Notebook finden sie unter https://research.google.com/colaboratory/faq.html. Besonders smart ist die Funktion von Textzellen. Sie erlauben das Hinzufügen eigener Texte vor oder nach den Programmzellen; können sie ein eigenes Skript erstellen.Textzelle über der Programmzelle","code":""},{"path":"python---quickstart.html","id":"variante-2-installation-von-python","chapter":"1 Python - Quickstart","heading":"Variante 2: Installation von Python","text":"Alternativ können sie Python auch auf ihrem Rechner installieren. Die Installationsanleitung finden sie auf https://www.python.org/. Um die Installation zu prüfen verwenden sie den BefehlAls Ausgabe erhalten sie die installierte Version von Python, zum Beispiel Python 3.9.6. Sie können nun mit einem einfache Texteditor. z.B. Notepad++, die Programmbefehle eine Datei schreiben. Wenn sie die Zeile print(\"Hallo Welt\") die Datei HalloWelt.py schreiben, können sie das Programm mit folgendem Befehl ausführen.Sie sollten nun die Ausgabe Hallo Welt sehen.Verwenden sie die für Python-Programme übliche Dateiendung .py. Keine Leerzeichen im Dateinamen!","code":"python --version    python HalloWelt.py"},{"path":"python---quickstart.html","id":"programme-und-fehler","chapter":"1 Python - Quickstart","heading":"1.2 Programme und Fehler","text":"Sie werden eventuell Syntax-Fehler ihren Programmen haben. Syntax-Fehler entstehen, wenn Python ihr Programm nicht versteht. Oft geht es dabei um “Rechtschreibfehler”. Schreiben sie also fälschlicherweise prin(\"Hallo Welt\"), erhalten sie bei der Programmausführung ein Fehlermeldung:Häufig lässt sich diese Meldung leicht verstehen, und sie können den Fehler korrigieren.Läuft ein Programm ohne Fehlermeldung ab, kann man daraus natürlich nicht auf die Korrektheit des Programms schließen! Ihr Programm kann also auch noch logisch falsch sein.","code":"line 1, in <module>\n    prin(\"Hallo Welt\")\nNameError: name 'prin' is not defined "},{"path":"python---quickstart.html","id":"python-lernen","chapter":"1 Python - Quickstart","heading":"1.3 Python lernen","text":"Es geht uns nicht erster Linie darum gute Python-Programmierer zu werden. Unsere Kenntnisse müssen aber für die Lösung oder Analyse unserer Problemstellungen ausreichen. Das legt auch den Umfang Python Know-fest. Es gibt hierfür zahlreiche gute Bücher und Internetquellen. Eine ausgewählter Link, auf den ich regelmäßig verweisen werden isthttps://www.w3schools.com/python/Suchen sie doch unter Python Intro nach dem Hallo-Welt-Beispiel. Sie finden dort unter Try eine weitere Möglichkeit Python-Programme auszuführen!","code":""},{"path":"daten.html","id":"daten","chapter":"2 Daten","heading":"2 Daten","text":"Daten1 sind Ergebnisse von Beobachtungen, Messungen oder Berechnungen, die einer bestimmten Form notiert, also aufgeschrieben sind. Häufig sprechen sprechen wir auch von Werten, statt von Daten. Wir können zum Beispiel Lilienblüten untersuchen und pro Blütein cm  messen:die Länge und Breite des Kronblattes (Petalum, petal) sowiedie Länge und Breite des Kelchblattes (Sepalum, sepal)Lilienblüte2","code":""},{"path":"daten.html","id":"variablen","chapter":"2 Daten","heading":"2.1 Variablen","text":"Eine Beobachtung oder Messung eines einzelnen Wertes formulieren wir obigem Beispiel der Form “Sepal Länge: 5,1cm”. Der Begriff Länge wird bei verschiedenen Messungen verschiedene Werte annehmen. Zum Umgang mit diesen Werte, verwenden wie Variablen. Variablen sind Platzhalter oder Speicher für Werte, wir sprechen also vom Wert einer Variable. Im nachfolgendem Beispiel wird der Variable mit dem Namen sepal_laenge der Wert \\(5.1\\) zugewiesen. Variablen haben immer einen Namen. Einen Wert erhalten sie erst durch eine sog. Zuweisung (wie Zeile 1). Zeile 2 drucken wir den Wert aus. Führen Sie also folgende Phython-Befehle aus:Ausgabe:Die erstmalige Zuweisung eines Wertes eine Variable heißt Initialisierung.Wichtig:Leerzeichen Variablennamen sind nicht erlaubt! (Deshalb wurde der Underscore verwendet.)Vermeiden sie Umlaute Variablen","code":"sepal_laenge = 5.1\nprint(sepal_laenge)#> 5.1"},{"path":"daten.html","id":"datentypen","chapter":"2 Daten","heading":"2.2 Datentypen","text":"Ein Wert einer Messung kann neben einer Zahl \\(5.1\\) auch ein Begriff (z.B. die Note “sehr gut”). Offensichtlich gehören beide Werte zu verschiedene Typen von Werten, den sogenannten Datentypen. Wir beschäftigen uns mit den DatentypenZahlen,Strings (Text, Worte) undBoolean (logische Werte).","code":""},{"path":"daten.html","id":"zahlen","chapter":"2 Daten","heading":"2.2.1 Zahlen","text":"Werte dieses Datentyps sind z.B. \\(1\\), \\(-1\\), \\(1.7\\) oder \\(1/3\\). Wie sie wissen, lässt sich die Menge der Zahlen noch weiter einteilen natürliche Zahlen und reelle Zahlen (und noch ein paar mehr, die aber vorerst nicht gebraucht werden. Wir verwenden die üblichen Symbole \\(\\mathbb{N}\\) für die natürlichen Zahlen und \\(\\mathbb{R}\\) für die reellen Zahlen.Wir notieren Zahlen wie üblich und verwenden der Dezimalnotation den Punkt als Trennsymbol.Nachfolgendes Beispiel zeigt anhand einfacher Programmzeilen die Darstellung von Zahlen und zugleich schon die Verwendung der üblichen Operatoren für Addition und Multiplikation.Die Ausgabe dieses Programms ist:Mit der Funktion type kann lässt sich der Datentyp eines Wertes ausgeben. Es wird einigen Stellen hilfreich sein, den Datentyp eines Wertes anzuzeigen.Die Ausgabe dieses Programms ist:Die erste Ausgabezeile bedeutet, dass int der Datentyp des Wertes \\(1\\) ist. Analog ist float der Datentyp des Wertes \\(1.2\\). Beachten Sie, dass der Ausdruck \\(4/2\\) den Datentyp float besitzt, obwohl auch int plausibel wäre.","code":"x = 1\nprint(x)\nx = 1+1.1\nprint(x)\nx = 1/2+3/4\nprint(x)\nx = 1.2*2\nprint(x)#> 1\n#> 2.1\n#> 1.25\n#> 2.4x = 1; \nprint(type(x))\nx = 1.2; \nprint(type(x))\nx = 4/3; \nprint(type(x))#> <class 'int'>\n#> <class 'float'>\n#> <class 'float'>"},{"path":"daten.html","id":"operationen","chapter":"2 Daten","heading":"Operationen","text":"Zahlen lassen sich verknüpfen mit den üblichen Symbolen verknüpfen.Die Ausgabe dieses Programms ist:Wir werden mit diesen Operationen zurechtkommen. Mehr finden Sie unter https://www.w3schools.com/python/python_operators.asp","code":"x = 9; \ny = -4\n\ne = x+y\nprint(e)\ne = x-y\nprint(e)\ne = x*y\nprint(e)\ne = x/y\nprint(e)#> 5\n#> 13\n#> -36\n#> -2.25"},{"path":"daten.html","id":"strings","chapter":"2 Daten","heading":"2.2.2 Strings","text":"Strings sind Zeichenkette. Werte dieses Datentyps sind zum Beispiel “Baum”, “Hans Huber” oder “sehr gut”. Zeichenketten beginnen und enden mit einem Anführungszeichen. der Regel macht uns diese Notationen keine Probleme - manchmal wird es trotzdem ungemütlich: Kann eine Zeichenkette ein Anführungszeichen enthalten? Gibt es einen Unterschied zwischen der Zahl 123 und der Zeichenkette “123”? Wir vertiefen das hier nicht, sondern gehen auf die Fragen , sobald sie uns begegnen.Wir können einer Variable einen String zuweisen, wenn wir den Wert Hochkommata setzen:Ausgabe:Die einzige benötigte Operation ist die sogenannte Konkatenation, also das “Aneinanderhängen” von Strings. Dazu wird der \\(+\\) Operator verwendet:Ausgabe:Frage: erwarten sie für die Berechnung \\(s-t\\) oder \\(s*t\\) ?Mehr lesen: https://www.w3schools.com/python/gloss_python_string_concatenation.asp","code":"s = \"Aus\"\nprint( type(s) )#> <class 'str'>s = \"Aus\"\nt = \"gabe\"\nprint( s+t )#> Ausgabe"},{"path":"daten.html","id":"boolean","chapter":"2 Daten","heading":"2.2.3 Boolean","text":"Der Datentyp Boolean (logischer Datentyp) umfasst nur zwei Werte, die sogenannten Wahrheitswerte. Wir werden diesem Text die Notation True und False verwenden.Ausgabe:","code":"b = True;\nprint(b)\nprint( type(b) )#> True\n#> <class 'bool'>"},{"path":"daten.html","id":"zusammenfassung","chapter":"2 Daten","heading":"2.2.4 Zusammenfassung","text":"Wir nennen diese Datentypen “elementar”, weil wir andere Datentypen, z.B. das Kalenderdatum (“03.07.2022”) oder mathematische Vektoren aus diesen Datentypen zusammenstellen können. Der Begriff “elementar” ist nicht ganz korrekt, weil z.B. die Zahl \\(123\\) ja eine Folge von Ziffern und die Zeichenkette “Baum” eine Folge von Buchstaben ist. Elementar wäre also eher der Datentyp Ziffer oder Buchstabe, als der Datentyp Zahl oder String. Auch über diese begriffliche Ruppigkeit sehen wir zu Beginn hinweg.Stellen sie sich jeden Datentyp als Menge vor. Die Elemente der Menge sind die zulässigen Werte des Datentyps. Offensichtlich ist besitzt die Menge der Zahlen oder Texte unendlich viele Elemente, während der Logische Datentyp nur zwei Werte kennt.","code":""},{"path":"daten.html","id":"übungen","chapter":"2 Daten","heading":"2.2.5 Übungen","text":"Geben sie die Ergebnisse der Rechnungen \\(3-1.1\\) und \\(12 / 5\\) aus.Geben sie die Ergebnisse der Rechnungen \\(3-1.1\\) und \\(12 / 5\\) aus.Erklären Sie die Ausgabe für folgenden Programmzeile\nprint(1e2+1e-1)\nAusgabe:\n#> 100.1Erklären Sie die Ausgabe für folgenden ProgrammzeileAusgabe:","code":"print(1e2+1e-1)#> 100.1"},{"path":"daten.html","id":"skalenniveaus","chapter":"2 Daten","heading":"2.3 Skalenniveaus","text":"Bemerkungen:Skalenniveaus sind nicht immer klar zuzuordnen.Skalenniveaus sind nicht immer klar zuzuordnen.Auf nominalen Datenskalen lassen sich stets künstliche Ordnungen (und damit ordinale Datenskalen) definieren.Auf nominalen Datenskalen lassen sich stets künstliche Ordnungen (und damit ordinale Datenskalen) definieren.Bilden sie keine Mittelwerte auf Daten mit ordinalen Datenskalen!Bilden sie keine Mittelwerte auf Daten mit ordinalen Datenskalen!Nominale und ordinale Datenskalen heißen auch kategorisch oder qualitativ.Nominale und ordinale Datenskalen heißen auch kategorisch oder qualitativ.Intervall und Ratio-Datenskalen heißen auch metrisch.Intervall und Ratio-Datenskalen heißen auch metrisch.Ergänzend: Die fünf Skalenniveaus: Einfach und verständlich erklärt (statistikpsychologie.de)","code":""},{"path":"daten.html","id":"iris-datensatz","chapter":"2 Daten","heading":"2.4 Iris-Datensatz","text":"Der Iris-Datensatz enthält Messungen von jeweils 50 Blüten zu drei verschiedenen Lilien-Arten (setosa, versicolor, virginica)Download","code":""},{"path":"daten.html","id":"datensatz","chapter":"2 Daten","heading":"2.4.1 Datensatz","text":"Folgender - der Community wohlbekannter - Datensatz liegt uns vor (Sie finden die Daten hier).xx Die ersten 5..xxx Hier die letzten 5Wir greifen zwar etwas vor, aber diesem Beispiel lässt sich eine typische Aufgabenstellung von Machine Learning recht einfach erklären: Ein Bobachter erhebt für eine Lilie die Messwerte sepal_len, sepal_wid, petal_len, petal_wid einer Blüte und daraus die Art der Lilie, für die diese Messwerte erhoben wurden bestimmen.Nehmen wir nun , dass der Beobachter die Messwerte \\((5.1, 3.5, 1.4, 0.2)\\) liefert. Wir erkennen, dass diese Werte als Datenzeile \\(0\\) unserem Datensatz vorliegen und vor einer Setosa erhoben wurden (Spalte class). Wir werden natürlich “Setosa” als Art dieser Blüte angeben.Etwas schwieriger ist die Antwort für die Messwerte \\((6.1, 3.2, 5.3, 2.1)\\), die nicht als Zeile unserem Datensatz auftreten. Mit etwas Recherche finden wir heraus, dass Datensatz 148 für die recht ähnlichen Werte \\((6.2, 3.4, 5.4, 2.3)\\) für eine Virginica enthält. Wir könnten also mit der Art “Virginica” antworten.3Um Datensätze für Machine Learning zu verwenden, müssen wir wir sie vorher auf Tauglichkeit untersuchen, eventuell korrigieren, filtern und weiter.","code":"#>    sepal_len  sepal_wid  petal_len  petal_wid   class\n#> 0        5.1        3.5        1.4        0.2  setosa\n#> 1        4.9        3.0        1.4        0.2  setosa\n#> 2        4.7        3.2        1.3        0.2  setosa\n#> 3        4.6        3.1        1.5        0.2  setosa\n#> 4        5.0        3.6        1.4        0.2  setosa#>      sepal_len  sepal_wid  petal_len  petal_wid      class\n#> 145        6.7        3.0        5.2        2.3  virginica\n#> 146        6.3        2.5        5.0        1.9  virginica\n#> 147        6.5        3.0        5.2        2.0  virginica\n#> 148        6.2        3.4        5.4        2.3  virginica\n#> 149        5.9        3.0        5.1        1.8  virginica"},{"path":"daten.html","id":"übung","chapter":"2 Daten","heading":"2.4.2 Übung","text":"Welches Skalenniveau haben die einzelnen Spalten im Iris-Datensatz?","code":""},{"path":"daten.html","id":"von-nominal-zu-ordinal-xx-verschieben","chapter":"2 Daten","heading":"2.4.2.0.1 Von Nominal zu Ordinal [xx verschieben]","text":"Wir werden später folgende eindeutige Zuordnung treffen:","code":""},{"path":"feature-matrix-und-label.html","id":"feature-matrix-und-label","chapter":"3 Feature-Matrix und Label","heading":"3 Feature-Matrix und Label","text":"diesem kurzen Abschnitt definieren vorbereitend für den Abschnitt zu Machine-Learning wesentliche Begriffe und stellen einen Bezug zu den aus der linearen Algebra bekannten Konzepten von Vektor und Matrix .","code":""},{"path":"feature-matrix-und-label.html","id":"numerische-features-merkmal","chapter":"3 Feature-Matrix und Label","heading":"3.1 Numerische Features (Merkmal)","text":"Ein numerisches Feature ist ein Einzelaspekt einer Beobachtung oder Messung unserer Objekte, der sich als Zahl ausdrücken lässt. Ein Beispiel aus dem Iris-Datensatz ist “Länge der Petalums”. Die Anzahl der Features einer Problemstellung nennen notieren wir mit dem Buchstaben \\(m\\). Bei Iris: \\(m = 4\\).","code":""},{"path":"feature-matrix-und-label.html","id":"feature-vektor-merkmals-vektor","chapter":"3 Feature-Matrix und Label","heading":"3.2 Feature-Vektor (Merkmals-Vektor)","text":"Feature-Vektor ist eine Gruppierung der konkreten gemessenen Werte der Features als Vektor. Diese Gruppierung notiert man der Regel als Zeilenvektor \\(\\bf{x} \\\\mathbb{R}^{m}\\). Ein Beispiel aus dem Iris-Datensatz ist der (erste) Feature-Vektor\\[\n\\textbf{x}= (5.1, 3.5, 1.4, 0.2 ) \\\\mathbb{R}^4\n\\]nachfolgender Abbildung ist dieser Feature-Vektor gelb markiert.Feature-VektorAlternative Namen für einen Feature-Vektor sindMerkmals-VektorExampleSample","code":""},{"path":"feature-matrix-und-label.html","id":"feature-matrix","chapter":"3 Feature-Matrix und Label","heading":"3.3 Feature-Matrix","text":"Eine Feature-Matrix besteht aus n Feature-Vektoren als Zeilen. Wir notieren die Feature-Matrix stets ebenfalls mit dem Symbol \\(X\\). Es ist:\\[\nX \\\\mathbb{R}^{n \\times m}\n\\]Beispiel (Iris): Die 150 Feature-Vektoren aus Iris bilde die Feature-Matrix \\(X \\\\mathbb{R}^{150 \\times 4}\\).","code":""},{"path":"feature-matrix-und-label.html","id":"label","chapter":"3 Feature-Matrix und Label","heading":"3.4 Label","text":"Zu jedem Feature-Vektor interessiert uns eine “Antwort” oder ein “Ergebnis”. Zum Beispiel fragen wir danach, zu welcher Gattung die Lilie mit dem Feature-Vektor \\(\\textbf{x}= (5.1, 3.5, 1.4, 0.2 )\\) gehört. Diese Information nennen wir Label zum Feature-Vektor \\(\\bf{x}\\). Wir bezeichnen den Label stets mit \\(\\bf{y}\\). Der Label kann ebenfalls ein Vektor oder auch nur ein einzelner Wert sein. Letzteres ist unseren Beispielen stets der Fall.","code":""},{"path":"feature-matrix-und-label.html","id":"labelled-example","chapter":"3 Feature-Matrix und Label","heading":"3.5 Labelled Example","text":"Das Paar \\((\\textbf{x},\\bf{y})\\) bestehend aus dem Feature-Vektor und dem Label \\(\\bf{y}\\). heißt auch Labelled Example.Schreibweise: Notieren wir den Feature-Vektor im Kontext mit \\(\\bf{x_i}\\), schreiben wir \\(\\bf{y_i}\\) für den zugehörigen Label.","code":""},{"path":"feature-matrix-und-label.html","id":"bemerkungen","chapter":"3 Feature-Matrix und Label","heading":"3.6 Bemerkungen","text":"Wir haben Feature-Vektoren Analogie zur lineare Algebra definiert. Sie bestehen damit nur aus Zahlen. Alle bekannten Operationen sind definiert und grundsätzlich erlaubt. der Praxis kann das zu Problemen führen, sofern Messungen nominal Skalen vorliegen, oder Werte fehlen.","code":""},{"path":"lineare-algebra.html","id":"lineare-algebra","chapter":"4 Lineare Algebra","heading":"4 Lineare Algebra","text":"diesem Abschnitt wiederholen wir ein paar Begriffe aus der Linearen Algebra, die bekannt sein sollten. Die Notationen wählen wir , dass sie zur Anwendung NumPypassen.","code":""},{"path":"lineare-algebra.html","id":"skalar","chapter":"4 Lineare Algebra","heading":"4.1 Skalar","text":"Die meisten Objekte der Linearen Algebra sind Strukturen von Zahlen, zum Beispiel Vektoren oder Matrizen. Skalare dagegen sind ganz einfach nur Zahlen, unserem Fall reelle Zahlen. Wir bezeichnen Skalare mit kleinen kursiven Buchstaben. Wir schreiben zum Beispiel \\(s \\\\mathbb{R}.\\)","code":""},{"path":"lineare-algebra.html","id":"vektor","chapter":"4 Lineare Algebra","heading":"4.2 Vektor","text":"Ein Vektor ist ein Tupel reeller Zahlen, die einer bestimmten Weise angeordnet sind. Jede Zahl aus dem Tupel ist über einen Index genau bestimmt. Wir notieren einen Vektor mit einem kleinen und fett gedruckten Buchstaben, also z.B. \\(\\bf{x}\\) . Die einzelnen Zahlen des Vektors werden kursiv gedruckt und mit ihrem Index notiert, also die erste Zahl mit \\(x_1\\), die zweite Zahl mit \\(x_2\\) und weiter. Enthält der Vektor \\(n\\) reelle Zahlen ist der Vektor ein Element des n-fachen kartesischen Produktes der reellen Zahlen \\(\\mathbb{R}\\), kurz \\(\\mathbb{R}^{n}\\). Um die Elemente eines Vektors explizit anzugeben, notieren wir sie als Spalte\\[\n\\bf{x} = \\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n \\\\\n\\end{bmatrix}\n\\\\mathbb{R}^n\n\\]Die Zahl n heißt Dimension des Vektors.","code":""},{"path":"lineare-algebra.html","id":"matrix","chapter":"4 Lineare Algebra","heading":"4.3 Matrix","text":"Eine (reell-wertige) Matrix ist eine zweidimensionale, Zeilen und Spalten angeordnete Struktur von reellen Zahlen. Jedes Element einer Matrix \\(\\bf{}\\) wird über zwei Indizes bestimmt. Wir notieren eine Matrix mit einem fett gedruckten Großbuchstaben und die Elemente der Matrix mit dem Buchstaben der Matrix, aber nun nicht-fett und kursiv gedruckt und mit zwei Indizes versehen. Besteht eine Matrix aus n Zeilen und m Spalten, notieren wir das durch \\(\\bf{}\\\\mathbb{R}^{n\\times m }\\) und nennen\\(\\bf{}\\)eine Matrix mit der “Dimension n kreuz m”\\[\n\\bf{}= \n\\begin{bmatrix}\nA_{1,1} & A_{1,2} & \\cdots & A_{1,m}  \\\\\nA_{2,1} & A_{2,2} & \\cdots & A_{2,m}  \\\\\n\\vdots & \\vdots & \\ddots & \\vdots \\\\\nA_{n,1} & A_{n,2} & \\cdots & A_{n,m}  \\\\\n\\end{bmatrix}\n\\]","code":""},{"path":"lineare-algebra.html","id":"elementweise-addition","chapter":"4 Lineare Algebra","heading":"4.3.1 Elementweise Addition","text":"Ist \\(\\bf{B} \\\\mathbb{R}^{n\\times m }\\), also eine Matrix der gleichen Dimension, wie \\(\\bf{}\\), lässt sich die Summe \\(\\bf{+B}\\) bilden durch:\\[\n(+B)_{,j} = A_{,j} + B_{,j}\n\\]wir addieren also einfach die Elemente auf jeweiligen Positionen.","code":""},{"path":"lineare-algebra.html","id":"multiplikation-mit-skalar","chapter":"4 Lineare Algebra","heading":"4.3.2 Multiplikation mit Skalar","text":"Die Matrix \\(\\bf{}\\) lässt sich mit einer reellen Zahl \\(s\\) (also einem Skalar) multiplizieren und die entstehende Matrix \\(\\bf{sA}\\) ist wie erwartet definiert durch\\[\n(sA)_{,j} = s \\cdot A_{,j}\n\\]wir multiplizieren also jedes Element der Matrix mit dem Skalar \\(s\\).","code":""},{"path":"lineare-algebra.html","id":"transponieren","chapter":"4 Lineare Algebra","heading":"4.3.3 Transponieren","text":"Durch Transponieren wird aus einer Matrix \\(\\bf{}\\\\mathbb{R}^{n\\times m }\\) eine neue Matrix \\(\\bf{^T} \\\\mathbb{R}^{m\\times n }\\) erzeugt. Dabei gilt\\[\n(^T)_{j,} = A_{,j}  \\quad \\text{für } \\quad \\{1,...,n}  \n\\quad \\text{und} \\quad \nj \\{1,...,m}\n\\]Transponieren lässt sich durch eine Art spiegeln von \\(\\bf{}\\) deren Hauptdiagonale verstehen. Die Hauptdiagonale ist die gedachte Linie, die vom Element \\(A_{0,0}\\) im Winkel von 45 Grad nach rechts unten verläuft. Zum Beispiel:\\[\n\\bf{} = \\begin{bmatrix}\n1 & 2  \\\\\n3 & 4  \\\\\n5 & 6  \\\\\n\\end{bmatrix}  \\\\mathbb{R}^{3\\times 2 }\n\\quad\\Rightarrow\\quad\n\\bf{^T} = \\begin{bmatrix} \n1 & 3 & 5  \\\\\n2 & 4  & 6 \\\\\n\\end{bmatrix}\n\\\\mathbb{R}^{2\\times 3 }\n\\]","code":""},{"path":"lineare-algebra.html","id":"matrixprodukt","chapter":"4 Lineare Algebra","heading":"4.3.4 Matrixprodukt","text":"Wir können zwei Matrizen \\(\\bf{}\\) und \\(\\bf{B}\\) multiplizieren, wenn die Anzahl der Zeilen B der Anzahl der Spaten entspricht. Für \\(\\bf \\\\mathbb{R}^{n\\times m }\\) und \\(\\bf B \\\\mathbb{R}^{m\\times p }\\) gilt für das Produkt \\(\\bf{C}= \\bf{ } \\bf B \\\\mathbb{R}^{n\\times p }\\)\\[\nC_{,j} = \\sum_{l=1}^m  A_{,l} B_{l,j}\n\\]","code":""},{"path":"lineare-algebra.html","id":"zurück-zu-vektoren-spalten--und-zeilenvektoren","chapter":"4 Lineare Algebra","heading":"4.4 Zurück zu Vektoren: Spalten- und Zeilenvektoren","text":"Da wir Vektoren grafisch einer Spalte notiert haben, nennen wir sie auch Spaltenvektoren. Ein Vektor lässt sich offensichtlich als eine Matrix interpretieren, die nur aus einer Spalte besteht. Wenn wir diese Matrix, wie oben dargestellt, transponieren, entsteht eine Matrix entspricht, die nur aus einer Zeile besteht. Diese Matrix bezeichnen wir als Zeilenvektor. Diese Analogie führt uns zum Konzept eines transponierten Vektors:\\[\n\\bf{x} = \n\\begin{bmatrix}\nx_1 \\\\\nx_2 \\\\\n\\vdots \\\\\nx_n \\\\\n\\end{bmatrix}\n\\\\mathbb{R}^{n \\times 1}\n\\quad\\Rightarrow\\quad\n\\bf{x^T} =  \n\\begin{bmatrix}\nx_1,  x_2 , \\dots, x_n \\\\\n\\end{bmatrix}\n\\\\mathbb{R}^{1 \\times n}\n\\]der Regel identifizieren wir \\(\\mathbb{R}^{n \\times 1}\\) und \\(\\mathbb{R}^{1 \\times n}\\), aber grundsätzlich besteht doch ein Unterschied.Zusammenfassend:Vektoren sind für uns immer Spaltenvektoren (deshalb können wir den Begriff Spaltenvektor der Regel weglassen)Zeilenvektoren sind für uns stets transponierte Spaltenvektoren.Die die Notation eines Vektors als Spalte immer etwas Platz benötigt, notiert man z.B. nur \\(\\bf{x^T} = \\begin{bmatrix} 1, 2 ,3 \\\\ \\end{bmatrix}\\). Zeilenvektoren lassen sich ja einer Zeile schön notieren. Damit ist aber zwingend klar, dass\\[\n\\bf{x} = \n\\begin{bmatrix}\n1 \\\\\n2 \\\\\n3\n\\end{bmatrix}\n\\]Die Unterscheidung von Zeilenvektoren und Spaltenvektoren mag zunächst etwas künstlich erscheinen, sie wird aber später die Arbeit mit unseren Software-Tools deutlich erleichtern.","code":""},{"path":"lineare-algebra.html","id":"multiplikation-mit-skalar-und-elementweise-addition","chapter":"4 Lineare Algebra","heading":"4.4.1 Multiplikation mit Skalar und elementweise Addition","text":"Betrachtet man einen Vektor als \\(x, y \\\\mathbb{R}^{n}\\) jeweils als Matrix, ergeben folgende Definitionen sofort Sinn:\\[\ns \\cdot\\bf{ x} = \n\\begin{bmatrix}\ns\\cdot x_1 \\\\\ns\\cdot x_2 \\\\\n\\vdots \\\\\ns\\cdot x_n \\\\\n\\end{bmatrix}\n\\quad \\text{und}\\quad\n\\bf{x} + \\bf{y}= \n\\begin{bmatrix}\nx_1 + y_1 \\\\\nx_2 + y_2 \\\\\n\\vdots \\\\\nx_n + y_n \\\\\n\\end{bmatrix}\n\\]Sie sind im Grunde lediglich Konsequenzen aus der Identifikation von Spaltenvektoren und Matrizen. Gleiches gilt für die Gleichungen \\(s \\cdot\\bf{ x^T} = (s \\cdot\\bf{ x^T})\\) und \\(\\bf{ x^T} + \\bf{ y^T} = (\\bf{ x} + \\bf{ y})^T\\)","code":""},{"path":"lineare-algebra.html","id":"skalarprodukt","chapter":"4 Lineare Algebra","heading":"4.4.2 Skalarprodukt","text":"Man kann aus zwei Vektoren \\(x, y \\\\mathbb{R}^{n}\\) gleicher Dimension ein spezielles Produkt bilden, das wir mit \\(\\bf{x}^T\\bf{y}\\) notieren.(Zur Unterscheidung haben wir oben die Bezeichnung Multiplikation mit einem Skalar gewählt). Es ist definiert als das Produkt aus den jeweils zugeordneten Matrizen und es folgt:\\[\n\\bf{x}^T\\bf{y} =  \\sum_{=1}^{n} x_i \\cdot y_i\n\\]Bitte überlegen Sie kurz, dass obige Gleichheit keine Definition ist, sondern aus der Definition des Matrixproduktesfolgt!","code":""},{"path":"lineare-algebra.html","id":"übungen-1","chapter":"4 Lineare Algebra","heading":"4.5 Übungen","text":"","code":""},{"path":"lineare-algebra.html","id":"skalarprodukt-1","chapter":"4 Lineare Algebra","heading":"4.5.1 Skalarprodukt","text":"Berechnen Sie \\(v^T w\\), \\(v+w\\) und \\(2 \\cdot v\\) für\\[\nv    =   \\begin{bmatrix}\n1 \\\\\n-3 \\\\\n2\\\\\n\\end{bmatrix}\n\\quad \\text{} \\quad \nw    =   \\begin{bmatrix}\n1 \\\\\n0 \\\\\n13\\\\\n\\end{bmatrix}\n\\]","code":""},{"path":"lineare-algebra.html","id":"matrixprodukt-1","chapter":"4 Lineare Algebra","heading":"4.5.2 Matrixprodukt 1","text":"Berechnen sie \\(\\cdot v\\) für\\[\n= \\begin{bmatrix} \n1 & 2 & 3 \\\\ \n7 & -1 & 2 \\\\ \n0 & 4 & -1\n\\end{bmatrix} \n\\quad \\text{} \\quad \nv = \\begin{bmatrix}\n 1 \\\\-3 \\\\ 2 \n\\end{bmatrix}\n\\]","code":""},{"path":"lineare-algebra.html","id":"matrixprodukt-2","chapter":"4 Lineare Algebra","heading":"4.5.3 Matrixprodukt 2","text":"Berechnen Sie \\(vw^T\\) für die beiden oben angegebenen Vektoren (Vorsicht!).","code":""},{"path":"lineare-algebra.html","id":"matrixprodukt-3","chapter":"4 Lineare Algebra","heading":"4.5.4 Matrixprodukt 3","text":"Berechnen sie \\(\\times C\\) für\\[\n= \\begin{bmatrix} \n2 & -1 \\\\ \n4 & 0 \\\\ \n9 & 3\n\\end{bmatrix}\n\\quad\\text{und} \\quad\nC = \\begin{bmatrix} \n1 & 0 \\\\ \n4 & -1 \n\\end{bmatrix}\n\\]","code":""},{"path":"numpy.html","id":"numpy","chapter":"5 Numpy","heading":"5 Numpy","text":"","code":""},{"path":"numpy.html","id":"wofür-brauchen-wir-numpy","chapter":"5 Numpy","heading":"5.1 Wofür brauchen wir Numpy?","text":"Numpy ist eine Sammlung von Funktionen für effiziente Erzeugung, Berechnung und Bearbeitung von Zahlenstrukturen, zum Beispiel Vektoren oder Matrizen.  Wir werden Numpy-Arrays nutzen, um die Datensätze für maschinelles Lernen zu bearbeiten.","code":""},{},{"path":"numpy.html","id":"einfache-funktionen","chapter":"5 Numpy","heading":"5.2 Einfache Funktionen","text":"","code":"import numpy as np\n\n# Sinus\nx = np.sin(0)\nprint( x )\n\n# Quadrieren\nx = np.square(3)\nprint( x )\n\n# PI\nx = np.pi\nprint( x )\n\n# Eulersche Zahl\nx = np.e\nprint( x )\n\n# Gleichverteilt in [0,1[ \nx = np.random.random()\nprint(x)\n\n# Erwartungswert 0, Standardabweichung 1\nx = np.random.normal(0,1)\nprint(x)"},{"path":"numpy.html","id":"vektoren","chapter":"5 Numpy","heading":"5.3 Vektoren","text":"Da Feature-Vektoren für uns eine wichtige Rolle spielen, gehen wir näher auf Vektoren Numpy ein.","code":""},{"path":"numpy.html","id":"erzeugung-per-hand","chapter":"5 Numpy","heading":"5.3.1 Erzeugung “per Hand”","text":"Folgende Befehle erläutern das Thema Vektoren, elementweise Addition, elementweise Multiplikation und Skalarprodukt für Vektoren. Wichtig für die Erzeugung eines Vektors ist Zeile 3.","code":"import numpy as np\n\ny = np.array([5,6,7,8])     # Definiere Vektor y\nx = np.array([1,2,3,4])     # Definiere Vektor x\nprint (f'x    = {x}' )      # Drucke Werte\nprint (f'y    = {y}' )      # Drucke y"},{"path":"numpy.html","id":"np.ones-und-np.zeros","chapter":"5 Numpy","heading":"5.3.2 np.ones() und np.zeros()","text":"np.ones(n) erzeugt einen Vektor der Dimension n, der nur aus Einsen besteht. Analog funktioniert np.zeros","code":"v = np.ones(10)\nw = np.zeros(10)"},{"path":"numpy.html","id":"np.arange","chapter":"5 Numpy","heading":"5.3.3 np.arange()","text":"Mit np.arange erzeugen wir automatisch Strukturen, die wir häufiger brauchen. Beschäftigen Sie sich mit den Ausgaben und experimentieren sie etwas, dann wird die jeweilige Funktion recht schnell klar.","code":"import numpy as np\n\nx = np.arange(1,2,0.1)\nprint( x )\nprint( x[2] )\nprint( len(x) )\nprint ( type(x) )"},{"path":"numpy.html","id":"np.linspace","chapter":"5 Numpy","heading":"5.3.4 np.linspace()","text":"","code":"import numpy as np\n\nx = np.linspace(0,2*np.pi,20);\nprint(x)\nprint( len(x))"},{"path":"numpy.html","id":"elementweise-operationen","chapter":"5 Numpy","heading":"5.3.5 Elementweise Operationen","text":"Nachfolgendes Beispiel zeigt ausgewählte Operationen. Beachten Sie, dass sie die letzten vier Operationen im Mathe-Unterricht nicht gelernt haben. Sie sind jedoch recht hilfreich!","code":"import numpy as np\nx = np.array([1, 4, 9, 0])\ny = np.array([1, 0, 1, 0])\n\nprint(x*0.5)\nprint(x+y)\nprint (x.dot(y))\n\nprint (x+1)\nprint(x*y)\nprint (np.sqrt(x))\nprint (np.sin(x))"},{"path":"numpy.html","id":"übung-1","chapter":"5 Numpy","heading":"5.3.6 Übung","text":"Berechnen Sie durch Programmbefehle \\(v^Tw,\\) \\(v+w\\) und \\(2 \\cdot v\\) für\\[\nv = \\begin{bmatrix} 1 \\\\ -3 \\\\ 2\\\\ \\end{bmatrix} \\quad \\text{} \\quad w = \\begin{bmatrix} 1 \\\\ 0 \\\\ 13\\\\ \\end{bmatrix}\n\\]","code":""},{"path":"numpy.html","id":"zufallszahlen","chapter":"5 Numpy","heading":"5.4 Zufallszahlen","text":"Link: https://www.w3schools.com/python/numpy/numpy_random.asp","code":"import numpy as np\n\n# Gleichverteilt in [0,1[, 10 Werte\nua = np.random.random(10)\nprint(ua)\n\n# Erwartungswert 0, Standardabweichung 1, 10 Werte\nna = np.random.normal(0,1,10)\nprint(na)"},{"path":"numpy.html","id":"matrix-als-numpy-array","chapter":"5 Numpy","heading":"5.5 Matrix als Numpy-Array","text":"Matrizen werden Numpy als eine Ansammlung von Zeilenvektoren aufgebaut!Obiges Programm ergibt die nachfolgende Ausgabe. Die Indizierung der Element funktioniert erwartungsgemäß, allerdings wird mit der Zählung bei Null begonnen!","code":"import numpy as np\n\nA = np.array([[1,2],[3,4], [5,6], [7,8]])\nprint( A )\nprint( A[0,0] )\nprint( A[0,1] )"},{"path":"numpy.html","id":"shape-dimension","chapter":"5 Numpy","heading":"5.5.1 Shape (Dimension)","text":"Eine Matrix hat eine Anzahl von Zeilen und Spalten, die wir üblicherweise mit n und m bezeichnet haben. Folgender Befehl liefert die Anzahl der Zeilen und Spalten einer Matrix:Die Ausgabe (4,2) besagt, dass die Matrix vier Zeilen und zwei Spalten besitzt.","code":"import numpy as np\n\nA = np.array([[1,2],[3,4], [5,6], [7,8]])\nprint( A.shape )  # Ausgabe: (4,2)"},{"path":"numpy.html","id":"addition-und-multiplikation-mit-einem-skalar","chapter":"5 Numpy","heading":"5.5.2 Addition und Multiplikation mit einem Skalar","text":"","code":"import numpy as np\n\nA = np.array([[1,2],[3,4], [5,6], [7,8]])\nB = np.array([[10,20],[30,40], [50,60], [70,80]])\ns = 2;\nprint (2*A)     # Mulitplikation mit einem Skalar\nprint (A+B)"},{"path":"numpy.html","id":"matrixmultiplikation","chapter":"5 Numpy","heading":"5.5.3 Matrixmultiplikation","text":"Die Matrixmultiplikation erfolgt ebenfalls über den Befehl np.dot Immer auf die passenden shapes achten!Beispiel\n\\[\n= \\begin{bmatrix} 1 & 2 \\\\ 3 & 4 \\\\ 5 & 6 \\end{bmatrix} \\quad\\quad\\quad\nB = \\begin{bmatrix} 1 & 0 \\\\ 0 & 2 \\end{bmatrix}  \\quad\\quad\\quad\n\\cdot B = \\begin{bmatrix} 1 & 4 \\\\ 3 & 8 \\\\ 5 & 12 \\end{bmatrix} \\quad\\quad\\quad\n\\]\nMit Numpy: np.dot()Ausgabe:image-20211211102921206","code":"import numpy as np\n\nA = np.array([[1,2],[3,4], [5,6], [7,8]])\nB = np.array([[1,0],[0,2]])\nAB = np.dot(A, B) \nprint( AB )"},{"path":"numpy.html","id":"übung-2","chapter":"5 Numpy","heading":"5.5.4 Übung","text":"Lassen sie die Rechnungen “Auffrischung” Numpy durchführen.","code":""},{"path":"numpy.html","id":"vertiefend","chapter":"5 Numpy","heading":"5.6 Vertiefend","text":"","code":""},{"path":"numpy.html","id":"zeilenvektoren-und-spaltenvektoren","chapter":"5 Numpy","heading":"5.6.1 Zeilenvektoren und Spaltenvektoren","text":"Eigentlich sollten wir unterscheiden zwischenVektor der Dimension \\(n\\)\\(1 \\times n\\) Matrix (“Zeilenvektor”)\\(n \\times 1\\) Matrix (“Spaltenvektor”)Numpy geht das auch, wie folgende Code zeigt. Wie üblich werden aber Vektoren das entsprechende Format gebracht. (Stören sie sich bitte nicht runden und eckigen Klammern - sie haben keine Bedeutung.)\n\\[\nv = \\begin{bmatrix} 2 \\\\ 2 \\\\ 3 \\end{bmatrix} \\quad\\quad\\quad \nvz = (-1, 2, 3)\n\\]Wir sollten also stets überlegen, mit welchem shape wir operieren.","code":"import numpy as np\n\nv  = np.array([1,2,3])          # Vektor\nvz = np.array([[1,2,3]])        # 1 x 3 Matrix\nvs = np.array([[1], [2], [3]])  # 3 x 1 Matrix\n\nprint(f'v  : {v}')\nprint(f'vz : {vs}')\nprint(f'vs : {vz}')\n\nprint(f'Shape v  :{v.shape}')\nprint(f'Shape vz :{vz.shape}')\nprint(f'Shape vs :{vs.shape}')"},{"path":"numpy.html","id":"transponierung","chapter":"5 Numpy","heading":"5.6.2 Transponierung","text":"","code":"import numpy as np\n\nA = np.array([[1,2],[3,4], [5,6], [7,8]])\nAT = np.transpose(A)\nprint(AT)"},{"path":"chapter.html","id":"chapter","chapter":"6 Chapter","heading":"6 Chapter","text":"","code":""},{"path":"chapter.html","id":"latex-section-h2","chapter":"6 Chapter","heading":"6.1 Latex Section (H2)","text":"Ich habe mich bemüht, zahlreiche Übungsbeispiele und Youtube-Videos einzubauen. Viele Themen lassen\nsich besser darstellen. Sofern es Medien im Netz gibt,Parskip!! die die Sachverhalte gut darstellen, werde ich\nentsprechenden Links einbauen. Der Autor muss ja nicht der Meinung sein, alles besser zu können.\nGleichwohl darf dadurch der rote Faden nicht verl","code":""},{"path":"chapter.html","id":"latex-subsection-h3","chapter":"6 Chapter","heading":"6.1.1 Latex Subsection (H3)","text":"Ich habe mich bemüht, zahlreiche Übungsbeispiele und Youtube-Videos einzubauen. Viele Themen lassen\nsich besser darstellen. Sofern es Medien im Netz gibt, die die Sachverhalte gut darstellen, werde ich\nentsprechenden Links einbauen. Der Autor muss ja nicht der Meinung sein, alles besser zu können.\nGleichwohl darf dadurch der rote Faden nicht verl","code":""},{"path":"chapter.html","id":"latex-subsubsection-h4","chapter":"6 Chapter","heading":"6.1.1.1 Latex SubSubSection (H4)","text":"Ich habe mich bemüht, zahlreiche Übungsbeispiele und Youtube-Videos einzubauen. Viele Themen lassen\nsich besser darstellen. Sofern es Medien im Netz gibt, die die Sachverhalte gut darstellen, werde ich\nentsprechenden Links einbauen. Der Autor muss ja nicht der Meinung sein, alles besser zu können.\nGleichwohl darf dadurch der rote Faden nicht verl","code":""},{"path":"chapter.html","id":"latex-paragraph-h5","chapter":"6 Chapter","heading":"6.1.1.1.1 Latex Paragraph (H5)","text":"Ich habe mich bemüht, zahlreiche Übungsbeispiele und Youtube-Videos einzubauen. Viele Themen lassen\nsich besser darstellen. Sofern es Medien im Netz gibt, die die Sachverhalte gut darstellen, werde ich\nentsprechenden Links einbauen. Der Autor muss ja nicht der Meinung sein, alles besser zu können.\nGleichwohl darf dadurch der rote Faden nicht verl","code":""}]
